{
  "BASE_GENERATOR": {
    "defaultLib": "GeneratorFictitious",
    "libs": [
      {
        "lib": "GeneratorFictitious",
        "doc": "Fictitious generator (behaves in a similar way as an alpha-beta load)"
      }
    ]
  },
  "SYNCHRONOUS_GENERATOR": {
    "defaultLib": "GeneratorSynchronousFourWindings",
    "libs": [
      {
        "lib": "GeneratorSynchronousFourWindings",
        "doc": "Four windings synchronous generator"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsGoverPropVRPropInt",
        "properties": [
          "CONTROLLABLE"
        ]
      },
      {
        "lib": "GeneratorSynchronousFourWindingsGovSteam1ExcIEEEST4B"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsGovSteam1ExcIEEEST4BPssIEEE2B"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstVRNordic"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstVRNordicTfo",
        "properties": [
          "TRANSFORMER"
        ]
      },
      {
        "lib": "GeneratorSynchronousFourWindingsProportionalRegulations",
        "properties": [
          "CONTROLLABLE"
        ]
      },
      {
        "lib": "GeneratorSynchronousFourWindingsTGov1Sexs"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsTGov1SexsPss2A"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsVRKundur"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsVRKundurPssKundur"
      },
      {
        "lib": "GeneratorSynchronousProportionalRegulationsInternalParameters"
      },
      {
        "lib": "GeneratorSynchronousThreeWindings",
        "doc": "Three windings synchronous generator"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsGoverNordicVRNordic"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsGoverNordicVRNordicTfo",
        "properties": [
          "TRANSFORMER"
        ]
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsGoverPropVRPropInt",
        "properties": [
          "CONTROLLABLE"
        ]
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsPmConstVRNordic"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsPmConstVRNordicTfo",
        "properties": [
          "TRANSFORMER"
        ]
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsProportionalRegulations",
        "properties": [
          "CONTROLLABLE"
        ]
      },
      {
        "lib": "GeneratorSynchronousFourWindingsIEEEG1Ac1a"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsIEEEG1Dc1a"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsIEEEG1IEEX2A"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstAc6aPss3b"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstAc7bPss3b"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstAc7cPss2c"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstAc8b"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstAc8bPss3b"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstDc1a"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstIEEX2A"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstSt5bPss2b"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstSt6bPss3b"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstSt6cPss6c"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstSt7bPss2a"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsPmConstSt9cPss2c"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsTGov1Dc1a"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsTGov1Scrx"
      },
      {
        "lib": "GeneratorSynchronousFourWindingsTGov3IEEX2A"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsHyGovBbSex1"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsHyGovScrx"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsHyGovScrxRvs"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsHyGovScrxRvsTfo"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsIeeeG1IeeeT1"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsIeeeG1IeeeT1Tfo"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsIeeeG1Scrx"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsIeeeG1ScrxTfo"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsIEEEG2BbSex1"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsPmConstExcIeeeAc1a"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsPmConstExcIeeeAc1aTfo"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsPmConstScrx"
      },
      {
        "lib": "GeneratorSynchronousThreeWindingsPmConstScrxTfo"
      }
    ]
  },
  "SYNCHRONIZED_GENERATOR": {
    "defaultLib": "GeneratorPQ",
    "libs": [
      {
        "lib": "GeneratorPQ",
        "doc": "Generator with fixed active and reactive power targets. The actual outputs may however vary in order to mimic frequency and voltage regulation."
      },
      {
        "lib": "GeneratorPV",
        "properties": [
          "CONTROLLABLE"
        ],
        "doc": "Generator with fixed active power and voltage targets. The reactive power output changes over time in order to follow the voltage target (when it is not possible to do so, the reactive power is set to the minimum or maximum value). The active power outputs may vary in order to mimic frequency regulation"
      },
      {
        "lib": "GeneratorPVFixed"
      },
      {
        "lib": "GeneratorPVDiagramPQ"
      }
    ]
  },
  "HVDC_P": {
    "defaultLib": "HvdcPV",
    "libs": [
      {
        "lib": "HvdcPV"
      },
      {
        "lib": "HvdcPVEmulation"
      },
      {
        "lib": "HvdcPVEmulationSet"
      },
      {
        "lib": "HvdcPVDiagramPQ"
      },
      {
        "lib": "HvdcPVDiagramPQEmulation"
      },
      {
        "lib": "HvdcPVDiagramPQEmulationSet"
      },
      {
        "lib": "HvdcPTanPhi"
      },
      {
        "lib": "HvdcPTanPhiDiagramPQ"
      },
      {
        "lib": "HvdcPVDangling",
        "properties": [
          "DANGLING"
        ]
      },
      {
        "lib": "HvdcPVDanglingDiagramPQ",
        "properties": [
          "DANGLING"
        ]
      },
      {
        "lib": "HvdcPTanPhiDangling",
        "properties": [
          "DANGLING"
        ]
      },
      {
        "lib": "HvdcPTanPhiDanglingDiagramPQ",
        "properties": [
          "DANGLING"
        ]
      },
      {
        "lib": "HvdcPQProp"
      },
      {
        "lib": "HvdcPQPropDangling",
        "properties": [
          "DANGLING"
        ]
      },
      {
        "lib": "HvdcPQPropDanglingDiagramPQ",
        "properties": [
          "DANGLING"
        ]
      },
      {
        "lib": "HvdcPQPropDiagramPQ"
      },
      {
        "lib": "HvdcPQPropDiagramPQEmulation"
      },
      {
        "lib": "HvdcPQPropDiagramPQEmulationSet"
      },
      {
        "lib": "HvdcPQPropDiagramPQEmulationVariableK"
      },
      {
        "lib": "HvdcPQPropEmulation"
      },
      {
        "lib": "HvdcPQPropEmulationSet"
      },
      {
        "lib": "HvdcPQPropEmulationVariableK"
      }
    ]
  },
  "HVDC_VSC": {
    "defaultLib": "HvdcVSC",
    "libs": [
      {
        "lib": "HvdcVSC",
        "doc": "Standard dynamic model for Hvdc-VSC link"
      },
      {
        "lib": "HvdcVSCEmulation",
        "doc": "Standard dynamic model for Hvdc-VSC link with AC emulation"
      },
      {
        "lib": "HvdcVSCDanglingP",
        "properties": [
          "DANGLING"
        ],
        "doc": "Standard dynamic model for Hvdc-VSC link between two different synchronous areas (P control on the main one)"
      },
      {
        "lib": "HvdcVSCDanglingUdc",
        "properties": [
          "DANGLING"
        ],
        "doc": "Standard dynamic model for Hvdc-VSC link between two different synchronous areas (P control on the main one)"
      }
    ]
  },
  "BASE_BUS": {
    "defaultLib": "Bus",
    "libs": [
      {
        "lib": "Bus",
        "doc": "Standard bus"
      }
    ]
  },
  "INFINITE_BUS": {
    "defaultLib": "InfiniteBus",
    "libs": [
      {
        "lib": "InfiniteBus"
      },
      {
        "lib": "InfiniteBusWithImpedance"
      },
      {
        "lib": "InfiniteBusWithVariations"
      }
    ]
  },
  "BASE_LOAD": {
    "defaultLib": "LoadAlphaBeta",
    "libs": [
      {
        "lib": "LoadAlphaBeta",
        "properties": [
          "CONTROLLABLE"
        ],
        "doc": "Voltage-dependent load"
      },
      {
        "lib": "LoadAlphaBetaRestorative",
        "doc": "Restorative load model with a voltage-dependent behavior when the voltage hits the limits"
      },
      {
        "lib": "LoadAlphaBetaRestorativeLimitsRecalc"
      },
      {
        "lib": "LoadAlphaBetaMotor"
      },
      {
        "lib": "LoadPQ",
        "doc": "PQ load"
      },
      {
        "lib": "LoadAlphaBetaRestorativeNetwork"
      },
      {
        "lib": "ElectronicLoad"
      },
      {
        "lib": "LoadAlphaBetaMotorFifthOrder"
      },
      {
        "lib": "LoadAlphaBetaMotorSimplified"
      },
      {
        "lib": "LoadAlphaBetaThreeMotorFifthOrder"
      },
      {
        "lib": "LoadAlphaBetaTwoMotorFifthOrder"
      },
      {
        "lib": "LoadAlphaBetaTwoMotorSimplified"
      },
      {
        "lib": "LoadZIP"
      }
    ]
  },
  "LOAD_ONE_TRANSFORMER": {
    "defaultLib": "LoadOneTransformer",
    "libs": [
      {
        "lib": "LoadOneTransformer",
        "doc": "Load behind one transformer"
      }
    ]
  },
  "LOAD_ONE_TRANSFORMER_TAP_CHANGER": {
    "defaultLib": "LoadOneTransformerTapChanger",
    "libs": [
      {
        "lib": "LoadOneTransformerTapChanger",
        "doc": "Load behind one transformer with a tap changer"
      }
    ]
  },
  "LOAD_TWO_TRANSFORMERS": {
    "defaultLib": "LoadTwoTransformers",
    "libs": [
      {
        "lib": "LoadTwoTransformers",
        "doc": "Load behind two transformers"
      }
    ]
  },
  "LOAD_TWO_TRANSFORMERS_TAP_CHANGER": {
    "defaultLib": "LoadTwoTransformersTapChangers",
    "libs": [
      {
        "lib": "LoadTwoTransformersTapChangers",
        "doc": "Load behind two transformers with tap changers"
      }
    ]
  },
  "BASE_LINE": {
    "defaultLib": "Line",
    "libs": [
      {
        "lib": "Line",
        "doc": "Standard line"
      }
    ]
  },
  "BASE_SHUNT": {
    "defaultLib": "ShuntB",
    "libs": [
      {
        "lib": "ShuntB"
      },
      {
        "lib": "ShuntBWithSections"
      }
    ]
  },
  "BASE_STATIC_VAR_COMPENSATOR": {
    "defaultLib": "StaticVarCompensator",
    "libs": [
      {
        "lib": "StaticVarCompensator",
        "doc": "Standard static var compensator"
      },
      {
        "lib": "StaticVarCompensatorPV"
      },
      {
        "lib": "StaticVarCompensatorPVModeHandling"
      },
      {
        "lib": "StaticVarCompensatorPVRemote"
      },
      {
        "lib": "StaticVarCompensatorPVRemoteModeHandling"
      },
      {
        "lib": "StaticVarCompensatorPVProp"
      },
      {
        "lib": "StaticVarCompensatorPVPropModeHandling"
      },
      {
        "lib": "StaticVarCompensatorPVPropRemote"
      },
      {
        "lib": "StaticVarCompensatorPVPropRemoteModeHandling"
      }
    ]
  },
  "TRANSFORMER": {
    "defaultLib": "TransformerFixedRatio",
    "libs": [
      {
        "lib": "TransformerFixedRatio"
      },
      {
        "lib": "NetworkTransformer"
      }
    ]
  },
  "WECC": {
    "defaultLib": "WTG4AWeccCurrentSource",
    "libs": [
      {
        "lib": "WTG4AWeccCurrentSource",
        "internalModelPrefix": "WTG4A",
        "properties": [
          "SYNCHRONIZED"
        ]
      },
      {
        "lib": "WTG4BWeccCurrentSource",
        "internalModelPrefix": "WTG4B",
        "properties": [
          "SYNCHRONIZED"
        ]
      },
      {
        "lib": "WT4AWeccCurrentSource",
        "internalModelPrefix": "WT4A"
      },
      {
        "lib": "WT4BWeccCurrentSource",
        "internalModelPrefix": "WT4B"
      },
      {
        "lib": "PhotovoltaicsWeccCurrentSource",
        "internalModelPrefix": "photovoltaics",
        "properties": [
          "SYNCHRONIZED"
        ]
      },
      {
        "lib": "PhotovoltaicsWeccVoltageSource",
        "internalModelPrefix": "photovoltaics",
        "properties": [
          "SYNCHRONIZED"
        ]
      }
    ]
  },
  "GRID_FORMING_CONVERTER": {
    "defaultLib": "GridFormingConverterDroopControl",
    "libs": [
      {
        "lib": "GridFormingConverterDroopControl",
        "properties": [
          "SYNCHRONIZED"
        ]
      },
      {
        "lib": "GridFormingConverterMatchingControl",
        "properties": [
          "SYNCHRONIZED"
        ]
      },
      {
        "lib": "GridFormingConverterDispatchableVirtualOscillatorControl",
        "properties": [
          "SYNCHRONIZED"
        ]
      }
    ]
  },
  "OVERLOAD_MANAGEMENT": {
    "defaultLib": "OverloadManagementSystem",
    "libs": [
      {
        "lib": "CurrentLimitAutomaton",
        "alias": "OverloadManagementSystem",
        "doc": "Automation system which emits a specific order when the current on the monitored line goes above a given threshold during some time"
      }
    ]
  },
  "TWO_LEVEL_OVERLOAD_MANAGEMENT": {
    "defaultLib": "TwoLevelsOverloadManagementSystem",
    "libs": [
      {
        "lib": "CurrentLimitAutomatonTwoLevels",
        "alias": "TwoLevelsOverloadManagementSystem",
        "doc": "Automation system which emits a specific order when the current on two monitored lines goes above a given threshold during some time"
      }
    ]
  },
  "PHASE_SHIFTER_I": {
    "defaultLib": "PhaseShifterI",
    "libs": [
      {
        "lib": "PhaseShifterI",
        "doc": "Phase-shifter which monitors a given current. When the current goes above a given threshold max, taps will be changed in order to decrease it. When the active power goes below another threshold stop, the phase-shifter is automatically deactivated"
      }
    ]
  },
  "PHASE_SHIFTER_P": {
    "defaultLib": "PhaseShifterP",
    "libs": [
      {
        "lib": "PhaseShifterP",
        "doc": "Phase-shifter which monitors a given active power. When the active power goes above a given threshold max, taps will be changed in order to decrease it. When the active power goes below another threshold stop, the phase-shifter is automatically deactivated"
      }
    ]
  },
  "PHASE_SHIFTER_BLOCKING_I": {
    "defaultLib": "PhaseShifterBlockingI",
    "libs": [
      {
        "lib": "PhaseShifterBlockingI"
      }
    ]
  },
  "TAP_CHANGER": {
    "defaultLib": "TapChangerAutomaton",
    "libs": [
      {
        "lib": "TapChangerAutomaton",
        "doc": "Tap changer"
      }
    ]
  },
  "TAP_CHANGER_BLOCKING": {
    "defaultLib": "TapChangerBlockingAutomaton",
    "libs": [
      {
        "lib": "TapChangerBlockingAutomaton",
        "doc": "Block tap-changers when one of the monitored voltages goes below a threshold"
      }
    ]
  },
  "UNDER_VOLTAGE": {
    "defaultLib": "UnderVoltage",
    "libs": [
      {
        "lib": "UnderVoltageAutomaton",
        "alias": "UnderVoltage",
        "doc": "Send switch-off signal to the monitored generator when the voltage goes below a threshold"
      }
    ]
  }
}
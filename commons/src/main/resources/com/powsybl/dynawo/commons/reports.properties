dynawo.algorithms.contingencyNotSupported = Contingency element '${contingencyType}' not supported, contingency will be skipped
dynawo.algorithms.contingencyVlIdNotFound = Voltage id '${voltageLevelId}' of contingency '${contingencyId}' not found, contingency will be skipped
dynawo.commons.dynawoLog = Dynawo Log
dynawo.commons.dynawoLogEntry = ${message}
dynawo.commons.dynawoTimelineEntry = [t=${time}] ${message} on equipment '${identifiableId}'
dynawo.contingency.contingencyCreation = Contingency '${contingencyId}'
dynawo.dynaflow.loadflow = Dynaflow loadflow on network '${networkId}'
dynawo.dynaflow.sa = Dynaflow security analysis on network '${networkId}'
dynawo.dynaflow.sidedContingency = Contingency element '${contingencyElementId}' has a voltageId information and cannot be handle by DynaFlow, the contingency '${contingencyId}' will be skipped
dynawo.dynasa.dsa = Dynawo dynamic security analysis on network '${networkId}'
dynawo.dynasim.builderNotFound = No builder found for ${lib}
dynawo.dynasim.crossThreshold = ${fieldName} should be ${threshold} (${fieldValue})
dynawo.dynasim.duplicateDynamicId = Duplicate dynamic id found: ${duplicateId} -> model ${modelName} will be skipped
dynawo.dynasim.dynawoEquationsLog = Equations log
dynawo.dynasim.dynawoModelerLog = Modeler log
dynawo.dynasim.dynawoModelsProcessing = Dynawo models processing
dynawo.dynasim.dynawoNetworkLog = Network log
dynawo.dynasim.dynawoParametersLog = Parameters log
dynawo.dynasim.dynawoSimulation = Dynawo dynamic simulation on network '${networkId}'
dynawo.dynasim.dynawoSpecificLogEntry = ${message}
dynawo.dynasim.dynawoVariablesLog = Variables log
dynawo.dynasim.emptyAutomationSystem = ${automationSystemName} ${dynamicId} equipment ${equipmentId} is not a ${expectedModels}, the automation system will be skipped
dynawo.dynasim.emptyList = '${fieldName}' list is empty
dynawo.dynasim.emptyListAutomationSystem = None of ${automationSystemName} ${dynamicId} equipments are ${expectedModels}, the automation system will be skipped
dynawo.dynasim.failedDynamicModelHandling = ${modelName} ${dynamicId} cannot handle ${equipmentType} dynamic model, the model will be skipped
dynawo.dynasim.fieldConflict = Both '${firstFieldName}' and '${secondFieldName}' are defined, '${firstFieldName}' will be used
dynawo.dynasim.fieldNotSet = '${fieldName}' field is not set
dynawo.dynasim.fieldOptionNotImplemented = '${fieldName}' field is set but this option is not implemented yet, default value ${defaultValue} will be used
dynawo.dynasim.fieldSetWithWrongEquipment = '${fieldName}' field is set but ${equipment} does not possess this option
dynawo.dynasim.highDynawoVersion = Model version ${modelVersion} is too high for the current dynawo version ${currentVersion} -> model ${modelName} ${dynamicId} will be skipped
dynawo.dynasim.jsonDynamicModels = Dynawo Dynamic Models Supplier
dynawo.dynasim.jsonEventModels = Dynawo Event Models Supplier
dynawo.dynasim.lowDynawoVersion = Model version ${modelVersion} is too low for the current dynawo version ${currentVersion} ({$endCauses}) -> model ${modelName} ${dynamicId} will be skipped
dynawo.dynasim.modelInstantiation = Model ${modelName} ${dynamicId} instantiation ${state}
dynawo.dynasim.modelNotFound = Model ${lib} not found for ${builderName}
dynawo.dynasim.notEnergized = '${fieldName}' field value '${staticId}' should be energized
dynawo.dynasim.outputVariableInstantiationError = Output variable ${id} cannot be instantiated
dynawo.dynasim.staticIdUnknown = '${fieldName}' field value '${staticId}' not found for equipment type(s) ${equipmentType}, id will be used as pure dynamic model id
dynawo.dynasim.unknownIdToDynamic = '${fieldName}' field value '${staticId}' not found for equipment type(s) ${equipmentType}
dynawo.dynasim.wrongNetwork = '${fieldName}' field value ${equipmentType} ${staticId} does not belong to the builder network
dynawo.margincalc.loadsVariationInstantiationError = LoadVariation cannot be instantiated
dynawo.margincalc.marginCalculationTool = Margin Calculation Tool
dynawo.margincalc.mc = Dynawo margin calculation on network '${networkId}'
